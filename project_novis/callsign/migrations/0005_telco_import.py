# Generated by Django 2.1b1 on 2018-06-27 15:20

from django.db import migrations

# {"alpha_3": "",
#  "name": "",
#  "url": "",
#  "callsign_data_url": ""}

TELCOS = [
    {"alpha_3": "DEU",
     "name": "German Federal Network Agency",
     "url": "https://www.bundesnetzagentur.de/EN/",
     "used_for_official_callsign_import": True,
     "callsign_data_url": "https://www.bundesnetzagentur.de/SharedDocs/Downloads/DE/Sachgebiete/Telekommunikation/Unternehmen_Institutionen/Frequenzen/Amateurfunk/Rufzeichenliste/Rufzeichenliste_AFU.pdf"},
    {"alpha_3": "FIN",
     "name": "Finnish Transport and Communications Agency",
     "url": "https://www.traficom.fi/en",
     "used_for_official_callsign_import": True,
     "callsign_data_url": "https://eservices.viestintavirasto.fi/Licensesservices/Forms/AmateurLicenses.aspx",
     "callsign_data_description": "See https://github.com/OH6AD/koolit/blob/master/fetch_from_ficora"},
    {"alpha_3": "BEL",
     "name": "Belgian Institute for Postal services and Telecommunications",
     "url": "https://www.bipt.be/en",
     "callsign_data_url": "https://www.bipt.be/en/consumers/radio/radio-amateurs/licences-prefixes/prefixes"},
    {"alpha_3": "NLD",
     "name": "Radiocommunications Agency Netherlands",
     "url": "https://www.agentschaptelecom.nl/radiocommunications-agency",
     "callsign_data_description": "Overview issued permits relay stations and beacon stations radio amateurs: https://www.agentschaptelecom.nl/onderwerpen/radiozendamateurs/documenten/publicaties/2018/januari/01/overzicht-uitgegeven-vergunningen-relaisstations-en-bakenstations"},
    {"alpha_3": "GBR",
     "name": "Office of Communications",
     "url": "https://www.ofcom.org.uk/"},
    {"alpha_3": "FRA",
     "name": "L’Agence nationale des fréquences (ANFR)",
     "url": "https://www.anfr.fr/en/home/",},
    {"alpha_3": "JPN",
     "name": "Ministry of Internal Affairs and Communications",
     "url": "http://www.soumu.go.jp/english/index.html",},
    {"alpha_3": "USA",
     "name": "Federal Communications Commission",
     "url": "https://www.fcc.gov/",
     "callsign_data_url": "https://www.fcc.gov/wireless/data",
     "used_for_official_callsign_import": False},
    {"alpha_3": "CHE",
     "name": "Switzerland Federal Office of Communications",
     "url": "https://www.bakom.admin.ch/bakom/en/homepage.html"},
    {"alpha_3": "AUT",
     "name": "Austrian Ministry for Transport, Innovation and Technology",
     "url": "https://www.bmvit.gv.at/en/index.html",
     "callsign_data_url": "https://www.bmvit.gv.at/ofb/funk/funkdienste/downloads/rfzliste.pdf",
     "used_for_official_callsign_import": False},
    {"alpha_3": "POL",
     "name": "Poland Office of Electronic Communications",
     "url": "https://www.uke.gov.pl/en/"},
]


def forwards(apps, schema_editor):
    TelecommunicationAgency = apps.get_model('callsign', 'TelecommunicationAgency')
    Country = apps.get_model('callsign', 'Country')
    db_alias = schema_editor.connection.alias

    for telco in TELCOS:
        telco["country"] = Country.objects.using(db_alias).get(alpha_3=telco.pop("alpha_3"))
        TelecommunicationAgency.objects.using(db_alias).create(**telco)


class Migration(migrations.Migration):
    dependencies = [
        ('callsign', '0004_prefix_import'),
    ]

    operations = [
        migrations.RunPython(forwards),
    ]
